Exercice 2 :

Q1 :
Pour émettre un message en multicast, on commence par définir une adresse et un port,
on encode le message et on définit un packet avec le message, l'adresse et le port,
cela avant de l'envoyer avec, cette fois-ci, une MulticastSocket à la place de la
DatagramSocket utilisée précédement.

Pour recevoir, on définit l'adresse et la MulticastSocket avec le port, on join l'adresse
au groupe avant de recevoir le packet, de décoder puis d'afficher le message.


Q2 :
Pour l'émission, on doit vérifier qu'il y a bien un seul argument étant le message à
envoyer.
Il faut aussi que l'adresse et le port existent, qu'il n'y ait pas d'erreur dans leur nom.


Pour la réception, il ne doit y avoir aucun argument passé en paramètre,
il faut également que l'adresse et le port existent.

Exercice 3 :

Q1 :
Comment réaliser un client capable d'émettre
et de recevoir des paquets UDP simultanément ?

Q2 :
Chaque message arrivant de machines différentes, on souhaite
pouvoir associer un nom symbolique à chaque machine.
Proposer une solution  pour que chaque message soit associé à
un nom d'utilisateur en particulier et qu'il soit ainsi plus
facile de suivre les conversations.  
